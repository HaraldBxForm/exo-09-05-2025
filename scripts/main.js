// ==============================
// üå± S√©lection des √©l√©ments
// ==============================

// Inputs
const inputDescription = document.querySelector(`.input-text`);
const inputNumber = document.querySelector(`.input-number`);
const inputCategory = document.querySelector(`.input-select`);
const addButton = document.querySelector(`.add-button`);

// Display
const displayedD√©penses = document.querySelector(`.displayed-list`);
const totalAmmount = document.querySelector(`.total-ammount`);
const displayedCategory = document.querySelector(`.displayed-category`)

// ==============================
// üß† Variables globales
// ==============================

// Liste des d√©penses
const D√©penses = [];

// Total
let total = 0;

// Date du jour format√©e
const formatedDate = new Date().toLocaleDateString('fr-FR');

// ==============================
// üéä Fonctionnalit√©s
// ==============================

// Ajouter une nouvelle d√©pense
function addElementToD√©penses() {
    // V√©rifier que tous les champs sont remplis
    if (!inputDescription.value.trim() || !inputNumber.value.trim() || inputCategory.value === '') {
        alert("Veuillez remplir tous les champs !");
        return;
    }

    // Ajout des d√©penses √† la liste "D√©penses"
    D√©penses.push([inputDescription.value, inputNumber.value, inputCategory.value, formatedDate]);

    console.log(D√©penses);
    
    // Reset les champs
    inputDescription.value = ``;
    inputNumber.value = ``;
    inputCategory.value = '';

}

// Afficher les d√©penses
function displayD√©penses() {
    // Display reset
    displayedD√©penses.innerHTML = ``;
    totalAmmount.innerHTML = ``;

    let total = 0;
    D√©penses.forEach((D√©pense, index) => {

        // Afficher la liste des d√©penses
        // displayedD√©penses.innerHTML += `<div class="displayed-list-element">
        // ${D√©pense[1]}‚Ç¨ ${D√©pense[0]} ${D√©pense[2]} ${formatedDate}
        // <div class="delete-button" data-index="${index}">‚ùå</div>
        // </div>`

        const catogoryContainer = document.querySelector(`.${D√©pense[2]}`);
        if (catogoryContainer) {
            catogoryContainer.innerHTML += `<div class="displayed-list-element">
            ${D√©pense[1]}‚Ç¨ ${D√©pense[0]} ${D√©pense[2]} ${formatedDate}
            <div class="delete-button" data-index="${index}">‚ùå</div>
            </div>`
        }

        console.log(`${D√©pense[2]}`);
        
        console.log(document.querySelector(`.${D√©pense[2]}`));
        

        // Afficher le total
        total += Number(D√©pense[1]);
    });

    totalAmmount.innerHTML += `Total = ${total} ‚Ç¨`
}

// Supprimer une d√©pense
function deleteD√©pense(index) {

    let ammount = parseFloat(D√©penses[index][1]);
    D√©penses.splice(index, 1);
    total -= ammount;

    displayD√©penses();
}

// ==============================
// üß≤ √âv√©nements
// ==============================
addButton.addEventListener('click', function(e) {
    e.preventDefault();

    // Ajouter les d√©p√©nses
    addElementToD√©penses();

    // Afficher la liste des d√©penses
    displayD√©penses();
  });

displayedD√©penses.addEventListener(`click`, function(e) {
    if (e.target.matches(`.delete-button`)) {
        let index = e.target.dataset.index;
        deleteD√©pense(index);
    }
})